{
  "version": 3,
  "sources": ["../../../../../../DESIGN/01. JOBS/01. REDE SOCIAL/Mix Energy/LP - teste/notion-projeto2/project-bolt-sb1-5gtrnlch/project/netlify/functions/notion.js"],
  "sourceRoot": "C:/Users/JOYCE/AppData/Local/Temp/tmp-5104-PQ0WL9R8Qn1n",
  "sourcesContent": ["export async function handler(event, context) {\n  console.log('--- EXECUTANDO A FUN\u00C7\u00C3O notion.js (VERS\u00C3O COMPLETA) ---');\n  const databaseId = process.env.VITE_NOTION_DATABASE_ID;\n  const token = process.env.VITE_NOTION_TOKEN;\n\n  console.log('Database ID lido do .env na fun\u00E7\u00E3o:', databaseId);\n  console.log('Token lido do .env na fun\u00E7\u00E3o:', token);\n\n  if (event.httpMethod === 'OPTIONS') {\n    return {\n      statusCode: 200,\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Headers': 'Content-Type',\n        'Access-Control-Allow-Methods': 'GET, POST, OPTIONS'\n      },\n      body: ''\n    };\n  }\n\n  try {\n    const response = await fetch(`https://api.notion.com/v1/databases/${databaseId}/query`, {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": `Bearer ${token}`,\n        \"Notion-Version\": \"2022-06-28\", // Voc\u00EA pode considerar atualizar esta vers\u00E3o para a mais recente se desejar\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        filter: {\n          property: \"slug\", // Nome da sua coluna 'slug'\n          title: { equals: \"landing\" } // Filtro para o tipo 'Title' com valor 'landing'\n        }\n      })\n    });\n\n    const data = await response.json();\n\n    console.log('Dados recebidos do Notion na fun\u00E7\u00E3o Netlify (COM FILTRO):', JSON.stringify(data, null, 2));\n\n    return {\n      statusCode: 200,\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify(data)\n    };\n  } catch (error) {\n    console.error(\"Erro na API interna:\", error);\n    return {\n      statusCode: 500,\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify({ error: \"Erro ao buscar dados\" })\n    };\n  }\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAsB,QAAQ,OAAO,SAAS;AAC5C,UAAQ,IAAI,kEAAyD;AACrE,QAAM,aAAa,QAAQ,IAAI;AAC/B,QAAM,QAAQ,QAAQ,IAAI;AAE1B,UAAQ,IAAI,6CAAuC,UAAU;AAC7D,UAAQ,IAAI,uCAAiC,KAAK;AAElD,MAAI,MAAM,eAAe,WAAW;AAClC,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,SAAS;AAAA,QACP,+BAA+B;AAAA,QAC/B,gCAAgC;AAAA,QAChC,gCAAgC;AAAA,MAClC;AAAA,MACA,MAAM;AAAA,IACR;AAAA,EACF;AAEA,MAAI;AACF,UAAM,WAAW,MAAM,MAAM,uCAAuC,UAAU,UAAU;AAAA,MACtF,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,iBAAiB,UAAU,KAAK;AAAA,QAChC,kBAAkB;AAAA;AAAA,QAClB,gBAAgB;AAAA,MAClB;AAAA,MACA,MAAM,KAAK,UAAU;AAAA,QACnB,QAAQ;AAAA,UACN,UAAU;AAAA;AAAA,UACV,OAAO,EAAE,QAAQ,UAAU;AAAA;AAAA,QAC7B;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AAED,UAAM,OAAO,MAAM,SAAS,KAAK;AAEjC,YAAQ,IAAI,mEAA6D,KAAK,UAAU,MAAM,MAAM,CAAC,CAAC;AAEtG,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,+BAA+B;AAAA,MACjC;AAAA,MACA,MAAM,KAAK,UAAU,IAAI;AAAA,IAC3B;AAAA,EACF,SAAS,OAAO;AACd,YAAQ,MAAM,wBAAwB,KAAK;AAC3C,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,+BAA+B;AAAA,MACjC;AAAA,MACA,MAAM,KAAK,UAAU,EAAE,OAAO,uBAAuB,CAAC;AAAA,IACxD;AAAA,EACF;AACF;",
  "names": []
}
